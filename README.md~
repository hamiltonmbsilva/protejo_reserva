# Sistema de Reservas de Hotel (Backend - Django)

Este √© o reposit√≥rio do backend do Sistema de Reservas de Hotel, desenvolvido com o framework Python **Django** e o **Django REST Framework** para a cria√ß√£o de APIs.

---

### üöÄ **Funcionalidades do Backend**

* **API de Hot√©is:** Permite a gest√£o de m√∫ltiplos hot√©is.
* **API de Quartos:** Gerencia os quartos, incluindo tipo, capacidade e pre√ßo, associados a um hotel.
* **API de Clientes:** Gerencia as informa√ß√µes dos clientes.
* **API de Reservas:** Permite a cria√ß√£o, leitura e gest√£o das reservas.
* **Filtros de Pesquisa:** Possibilita filtrar quartos por hotel, tipo, e outros crit√©rios.
* **Painel Administrativo Personalizado:** O painel do Django foi customizado com o **Django Jazzmin**, incluindo um dashboard de m√©tricas na p√°gina inicial para monitorar o neg√≥cio.
* **Upload de Imagens:** Suporte para upload de arquivos de imagem atrav√©s do painel administrativo e da API.


---

### ‚öôÔ∏è **Requisitos**

* **Python 3.8+**
* **pip** (gerenciador de pacotes do Python)
* **Pillow** (biblioteca para processamento de imagens)
* **Django Jazzmin** (tema administrativo)
---

### üõ†Ô∏è **Configura√ß√£o e Instala√ß√£o**

Siga os passos abaixo para configurar e rodar o projeto em seu ambiente local.

#### **Passo 1: Clonar o Reposit√≥rio**

```bash
git clone <URL_DO_SEU_REPOSITORIO>
cd <nome_da_pasta>

### üõ†Ô∏è **Criar e Ativar o Ambiente Virtual**

* **No Windows:**
python -m venv venv
.\venv\Scripts\activate

* **No macOS e Linux:**
python3 -m venv venv
source venv/bin/activate

### **Instalar as Depend√™ncias**

pip install Django djangorestframework django-filter

## **Configurar o Projeto**

# projeto_reservas/settings.py

INSTALLED_APPS = [
    'jazzmin',
    'django.contrib.admin',
    'django.contrib.auth',
    # ... (outros apps padr√£o)
    'rest_framework',
    'django_filters',
    'reservas',
]

## ** MEDIA e TEMPLATES **

# Configura√ß√µes para arquivos de m√≠dia (imagens)
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media_root')

# Configura√ß√£o de templates para o dashboard
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

## **JAZZMIN_SETTINGS**

JAZZMIN_SETTINGS = {
    "site_title": "reserva HDS",
    "site_header": "reserva HDS",
    "site_brand": "reserva HDS",
    "welcome_sign": "Bem-vindo ao sistema de reservas HDS",
    "copyright": "HDS desenvolvedor",
    "site_logo": "img/logo.png", # Coloque a sua imagem em static/img/logo.png
    "theme": "flatly", # Exemplo de tema
}

## **urls.py**
# projeto_reservas/urls.py

from django.contrib import admin
from django.urls import path, include
from reservas.views import dashboard_view
from django.conf import settings
from django.conf.urls.static import static

urlpatterns = [
    path('admin/', admin.site.urls),
    path('api/', include('reservas.urls')),
]

admin.site.index = dashboard_view

if settings.DEBUG:
    urlpatterns += static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)



## **Executar as Migra√ß√µes**

python manage.py makemigrations
python manage.py migrate

## **Criar um Superusu√°rio**

python manage.py createsuperuser

## **üñ•Ô∏è Como Rodar o Projeto**

#Para habilita o ambiente virtual (venv)
.\venv\Scripts\activate 

python manage.py runserver

O servidor estar√° dispon√≠vel em: http://127.0.0.1:8000/

## **üìã Endpoints da API**

Hot√©is: http://127.0.0.1:8000/api/hoteis/

Quartos: http://127.0.0.1:8000/api/quartos/

Clientes: http://127.0.0.1:8000/api/clientes/

Reservas: http://127.0.0.1:8000/api/reservas/

Acessar Area Administrativa: http://127.0.0.1:8000/admin/logout/